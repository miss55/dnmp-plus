version: "3"
services:
  nginx:
    image: jenson/nginx:1.21.5
    # build:
    #   context: ./services/nginx
    #   args:
    #     ENABLED_MODULES: ${NGINX_ENABLED_MODULES}
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    restart: always
    networks:
      - default
  # use docker-compose run --rm certbot certonly --webroot -w /var/www/html/{your project} -d domain --agree-tos --renew-by-default  --text --email {your email}
  certbot:
    image: certbot/certbot
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${CERTBOT_ETC_LETSENCRYPT_DIR}:/etc/letsencrypt
      - ${CERTBOT_VAR_LIB_DIR}:/var/lib/letsencrypt:rw
    command: ["--version"]
    restart: always
    networks:
      - default
  php72:
    build:
      context: ./services/php7
      args:
        PHP_VERSION: ${PHP72_VERSION}
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        PHP_EXTENSIONS: ${PHP72_EXTENSIONS}
        MORE_EXTENSION_INSTALLER: php72.sh
        TZ: "$TZ"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${PHP72_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP72_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP72_LOG_DIR}:/var/log/php
      - ${PHP72_LOG_XHPROF_DIR}:/var/log/xhprof
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default
  php8:
    build:
      context: ./services/php8
      args:
        PHP_VERSION: php:${PHP8_VERSION}-fpm-alpine
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        PHP_EXTENSIONS: ${PHP8_EXTENSIONS}
        TZ: "$TZ"
    container_name: php8
    expose:
      - 9501
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP8_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP8_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP8_LOG_DIR}:/var/log/php
      - ${DIR_DATA}/composer:/tmp/composer
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default
  php56:
    build:
      context: ./services/php7
      args:
        PHP_VERSION: php:${PHP56_VERSION}-fpm-alpine
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        PHP_EXTENSIONS: ${PHP56_EXTENSIONS}
        TZ: "$TZ"
        MORE_EXTENSION_INSTALLER: php56.sh
    container_name: php56
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${APPS_DIR}:/apps/:rw
      - ${PHP56_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP56_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP56_LOG_DIR}:/var/log/php
      - ${DIR_DATA}/composer:/tmp/composer
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  mysql:
    image: mysql:${MYSQL_VERSION}
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${MYSQL_DATA_DIR}:/var/lib/mysql/:rw
    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
  mysql57:
    image: mysql:${MYSQL_VERSION_57}
    ports:
      - "${MYSQL_HOST_PORT_57}:3306"
    volumes:
      - ${MYSQL_CONF_57}:/etc/mysql/conf.d/:rw
      - ${MYSQL_DATA_DIR_57}:/var/lib/mysql/:rw
    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
  redis:
    image: redis:${REDIS_VERSION}
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    networks:
      - default
  # mongo:
  #   image: mongo:${MONGO_VERSION}
  #   ports:
  #     - "${MONGO_HOST_PORT}:27017"
  #   # volumes:
  #   #   - ${MONGO_DATA_DB_DIR}:/data/db:rw
  #   # restart: always
  #   networks:
  #     - default
  #   # external: true
  # mongo-express:
  #   image: mongo-express
  #   # restart: always
  #   ports:
  #     - "${MONGO_EXPRESS_HOST_PORT}:8081"
  #   networks:
  #     - default    
  # elasticsearch:
  #   build:
  #     context: ./elasticsearch
  #     args:
  #       ELASTICSEARCH_VERSION: ${ELASTICSEARCH_VERSION}
  #       ELASTICSEARCH_PLUGINS: ${ELASTICSEARCH_PLUGINS}
  #   container_name: elasticsearch
  #   environment:
  #     - TZ=$TZ
  #     - discovery.type=single-node
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   volumes:
  #     - ${ELASTICSEARCH_DATA_DIR}/data:/usr/share/elasticsearch/data
  #     - ${ELASTICSEARCH_CONF_FILE}:/usr/share/elasticsearch/config/elasticsearch.yml
  #     - ${ELASTICSEARCH_CONF_FILE}:/usr/share/elasticsearch/elasticsearch.yml
  #   hostname: elasticsearch
  #   restart: "no"
  #   ports:
  #     - "${ELASTICSEARCH_HOST_PORT_C}:9200"
  #     - "${ELASTICSEARCH_HOST_PORT_S}:9300"
  #   networks:
  #     - default
  # kibana:
  #   image: kibana:${KIBANA_VERSION}
  #   container_name: kibana
  #   environment:
  #     TZ: "$TZ"
  #     elasticsearch.hosts: http://localhost:9200
  #   hostname: kibana
  #   depends_on:
  #     - elasticsearch
  #   restart: "no"
  #   ports:
  #     - "${KIBANA_HOST}:5601"
  #   networks:
  #     - default
  # logstash:
  #   image: logstash:${LOGSTASH_VERSION}
  #   container_name: logstash
  #   hostname: logstash
  #   restart: "no"
  #   depends_on:
  #     - elasticsearch
  #   environment:
  #     TZ: "$TZ"
  #   ports:
  #     - "${LOGSTASH_HOST_PORT_C}:9600"
  #     - "${LOGSTASH_HOST_PORT_S}:5044"
  #   networks:
  #     - default

  # zookeeper:
  #   image: jplock/zookeeper
  #   ports:
  #     - "2181:2181"
  #   networks:
  #     - default
  # kafka1:
  #   image: wurstmeister/kafka:latest
  #   ports:
  #     - "9092:9092"
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_LISTENERS: "PLAINTEXT://:9092"
  #     KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://169.254.243.244:9092"
  #   networks:
  #     - default
  # kafka2:
  #   image: wurstmeister/kafka:latest
  #   ports:
  #     - "9093:9093"
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_LISTENERS: "PLAINTEXT://:9093"
  #     KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://169.254.243.244:9093"
  #   networks:
  #     - default
  # kafka-manager:
  #   image: sheepkiller/kafka-manager:latest
  #   container_name: kafa-manager
  #   ports:
  #     - "9090:9000"
  #   depends_on:
  #     - kafka1
  #     - kafka2
  #     - zookeeper
  #   # volumes:
  #   #   - ${KAFKA_MANAGER}:/kafka-manager-1.3.1.8/RUNNING_PID:rw
  #   environment:
  #     ZK_HOSTS: zookeeper:2181
  #     KAFKA_BROKERS: 169.254.243.244:9092,169.254.243.244:9093
  #   networks:
  #     - default
  # rabbitmq:
  #   image: rabbitmq:3.8.7-management
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   volumes:
  #     - ${RABBIT_MQ_DIR}:/var/lib/rabbitmq/mnesia
  #   environment:
  #     RABBITMQ_DEFAULT_USER: admin
  #     RABBITMQ_DEFAULT_PASS: admin
  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin:latest
  #   ports:
  #     - "${PHPMYADMIN_HOST_PORT}:80"
  #   networks:
  #     - default
  #   environment:
  #     - PMA_HOST=mysql
  #     - PMA_PORT=3306

  # phpredisadmin:
  #   image: erikdubbelboer/phpredisadmin:latest
  #   ports:
  #     - "${REDISMYADMIN_HOST_PORT}:80"
  #   networks:
  #     - default
  #   environment:
  #     - REDIS_1_HOST=redis
  #     - REDIS_1_PORT=6379
networks:
  default:
